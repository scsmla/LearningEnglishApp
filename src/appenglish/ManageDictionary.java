/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package appenglish;

import static appenglish.ChangeWord.connection;
import static appenglish.ChangeWord.connectionUrl;
import static appenglish.ChangeWord.resultSet;
import static appenglish.ChangeWord.statement;
import static appenglish.DeleteWord.connection;
import static appenglish.DeleteWord.connectionUrl;
import static appenglish.DeleteWord.resultSet;
import static appenglish.DeleteWord.statement;
import javax.swing.GroupLayout;
import javax.swing.*;
import java.awt.event.*;
import java.util.*;
import java.io.*;
import java.sql.*;
import com.microsoft.sqlserver.jdbc.*;
import java.awt.Color;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.awt.image.BufferedImage;
import java.util.Date;
import java.text.*;
import java.awt.Color;
import javax.swing.GroupLayout;
import javax.swing.*;
import java.awt.event.*;
import java.util.*;
import java.io.*;
import java.sql.*;
import com.microsoft.sqlserver.jdbc.*;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.awt.image.BufferedImage;
import java.util.Date;
import java.text.*;
public class ManageDictionary extends javax.swing.JFrame {

     public static String pathToImage = "";
    public static String connectionUrl = "jdbc:sqlserver://localhost:1433;" +  
     "databaseName=AppEnglish;integratedSecurity=true;"; 
    public static Connection connection = null;  
    public static Statement statement = null;   
    public static ResultSet resultSet = null;  
    public PreparedStatement prepsInsertProduct = null; 
     public PreparedStatement preparedStatement = null; 
    public ManageDictionary() {
        initComponents();
        buttonGroup1.add(mergeRadioButton);
        buttonGroup1.add(deleteRadioButton);
        readDbToComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void readDbToComboBox()
    {
        try
        {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String sqlquery = "SELECT * FROM dbo.Subject";
            connection = DriverManager.getConnection(connectionUrl);
            statement = connection.createStatement();
            resultSet =  statement.executeQuery(sqlquery);
            
            while(resultSet.next())
            {
               deleteComboBox.addItem(resultSet.getString(1));
               mergedSubjectComboBox.addItem(resultSet.getString(1));
               mergedSubjectComboBox2.addItem(resultSet.getString(1));
              
            }
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        deleteRadioButton = new javax.swing.JRadioButton();
        mergeRadioButton = new javax.swing.JRadioButton();
        mergedSubjectComboBox = new javax.swing.JComboBox<>();
        mergedSubjectComboBox2 = new javax.swing.JComboBox<>();
        deleteComboBox = new javax.swing.JComboBox<>();
        confirmButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        notifyLabel = new javax.swing.JLabel();
        deleteNotifyLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mergeNotifyLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(615, 480));

        deleteRadioButton.setText("Xóa");
        deleteRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteRadioButtonMouseClicked(evt);
            }
        });

        mergeRadioButton.setText("Gộp");
        mergeRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mergeRadioButtonMouseClicked(evt);
            }
        });

        confirmButton.setText("Xác nhận");
        confirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmButtonMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý từ điển");

        notifyLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        notifyLabel.setForeground(new java.awt.Color(255, 51, 51));
        notifyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notifyLabel.setText("Chọn hành động để thực hiên");
        notifyLabel.setVisible(false);

        deleteNotifyLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteNotifyLabel.setForeground(new java.awt.Color(255, 0, 0));
        deleteNotifyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteNotifyLabel.setText("Đã xóa");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 153));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Gộp với");
        jLabel2.setVisible(false);

        mergeNotifyLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mergeNotifyLabel.setForeground(new java.awt.Color(102, 102, 255));
        mergeNotifyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mergeNotifyLabel.setText("Đã gộp");
        mergeNotifyLabel.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mergeRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(deleteRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mergedSubjectComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(167, Short.MAX_VALUE)
                        .addComponent(notifyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(mergeNotifyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mergedSubjectComboBox2, 0, 110, Short.MAX_VALUE)
                    .addComponent(deleteNotifyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(deleteNotifyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mergedSubjectComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mergeRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mergedSubjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mergeNotifyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notifyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        mergedSubjectComboBox.setVisible(false);
        mergedSubjectComboBox2.setVisible(false);
        deleteComboBox.setVisible(false);
        deleteNotifyLabel.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteRadioButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteRadioButtonMouseClicked
        if(deleteRadioButton.isSelected())
        {
            deleteComboBox.setVisible(true);
            mergedSubjectComboBox2.setVisible(false);
            mergedSubjectComboBox.setVisible(false);
            notifyLabel.setVisible(false);
            jLabel2.setVisible(false);
        }
    }//GEN-LAST:event_deleteRadioButtonMouseClicked

    private void mergeRadioButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mergeRadioButtonMouseClicked
        if(mergeRadioButton.isSelected())
        {
            jLabel2.setVisible(true);
            deleteComboBox.setVisible(false);
            mergedSubjectComboBox2.setVisible(true);
            mergedSubjectComboBox.setVisible(true);
            notifyLabel.setVisible(false);
            
        }
    }//GEN-LAST:event_mergeRadioButtonMouseClicked

    private void confirmButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseClicked

        if(mergeRadioButton.isSelected())
        {
            
            if(mergedSubjectComboBox.getItemAt(mergedSubjectComboBox.getSelectedIndex()).equals(
                mergedSubjectComboBox2.getItemAt(mergedSubjectComboBox2.getSelectedIndex())))
            {
                notifyLabel.setText("Chọn chủ đề khác nhau để gộp");
                notifyLabel.setVisible(true);
            }
            else
            {
                try
                {
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    connection = DriverManager.getConnection(connectionUrl);

                    JDialog confirmDialog = new JDialog();
                    String updateQuery = "UPDATE dbo.wordData SET subjectOfWord = N'"+ mergedSubjectComboBox2.getItemAt(mergedSubjectComboBox2.getSelectedIndex()) +
                            "' WHERE subjectOfWord = N'" + mergedSubjectComboBox.getItemAt(mergedSubjectComboBox.getSelectedIndex()) +"'";
                         
//                    System.out.println(updateQuery);
                    String deleteDicQuery = "DELETE FROM dbo.Subject WHERE Subject = N'"+ mergedSubjectComboBox.getItemAt(mergedSubjectComboBox.getSelectedIndex()) +"'";
                    if(JOptionPane.showConfirmDialog(new JFrame(), "Bạn chắc chắn muốn gộp chủ đề ? ","Xác nhận",
                        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                        {
                            preparedStatement = connection.prepareStatement(  
                                updateQuery,  
                                Statement.RETURN_GENERATED_KEYS);  
                            preparedStatement.execute();  
                            preparedStatement = connection.prepareStatement(  
                                deleteDicQuery,  
                                Statement.RETURN_GENERATED_KEYS);  
                            preparedStatement.execute(); 
                            mergeNotifyLabel.setVisible(true);
                        }
                }
                catch(Exception ex)
                {
                    ex.printStackTrace();
                }
                mergeNotifyLabel.setVisible(true);
            }
        }
       
        
        else if(deleteRadioButton.isSelected())
        {
            
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                connection = DriverManager.getConnection(connectionUrl);
                
                JDialog confirmDialog = new JDialog();
                String deleteWordQuery = "DELETE FROM dbo.wordData" +
                    " WHERE subjectOfWord = N'"+ deleteComboBox.getItemAt(deleteComboBox.getSelectedIndex()) + "'";
//                System.out.println(deleteWordQuery);
                String deleteDicQuery = "DELETE FROM dbo.Subject WHERE Subject = N'"+ deleteComboBox.getItemAt(deleteComboBox.getSelectedIndex()) +"'";
                if(JOptionPane.showConfirmDialog(new JFrame(), "Bạn chắc chắn muốn xóa chủ đề này ? ","Xác nhận",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                    {
                        preparedStatement = connection.prepareStatement(  
                            deleteWordQuery,  
                            Statement.RETURN_GENERATED_KEYS);  
                        preparedStatement.execute();  
                        preparedStatement = connection.prepareStatement(  
                            deleteDicQuery,  
                            Statement.RETURN_GENERATED_KEYS);  
                        preparedStatement.execute();  
                        deleteNotifyLabel.setVisible(true);
                    }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
            
        }
        else
        {
            notifyLabel.setVisible(true);
        }
    }//GEN-LAST:event_confirmButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageDictionary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton confirmButton;
    private javax.swing.JComboBox<String> deleteComboBox;
    private javax.swing.JLabel deleteNotifyLabel;
    private javax.swing.JRadioButton deleteRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel mergeNotifyLabel;
    private javax.swing.JRadioButton mergeRadioButton;
    private javax.swing.JComboBox<String> mergedSubjectComboBox;
    private javax.swing.JComboBox<String> mergedSubjectComboBox2;
    private javax.swing.JLabel notifyLabel;
    // End of variables declaration//GEN-END:variables
}
