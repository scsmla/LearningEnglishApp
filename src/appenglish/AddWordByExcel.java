/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package appenglish;

import java.io.File;
import javax.swing.JFileChooser;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import jxl.write.Formula;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import jxl.write.biff.RowsExceededException;
import java.awt.Color;
import javax.swing.GroupLayout;
import javax.swing.*;
import java.awt.event.*;
import java.util.*;
import java.io.*;
import java.sql.*;
import com.microsoft.sqlserver.jdbc.*;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.awt.image.BufferedImage;
import java.util.Date;
import java.text.*;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author Bui
 */
public class AddWordByExcel extends javax.swing.JFrame {

    /**
     * Creates new form AddWordByExcel
     */
    public static String connectionUrl = "jdbc:sqlserver://localhost:1433;" +  
     "databaseName=AppEnglish;integratedSecurity=true;"; 
    public static Connection connection = null;  
    public static Statement statement = null;   
    public static ResultSet resultSet = null;  
    public PreparedStatement prepsInsertProduct = null; 
    private String pathToFile;
    public static List<String> listSubject = new ArrayList<>();
    public AddWordByExcel() 
    {
        initComponents();
        readDBtoList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void readDBtoList()
    {
        try
        {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String sqlquery = "SELECT * FROM Subject";
            connection = DriverManager.getConnection(connectionUrl);
            statement = connection.createStatement();
            resultSet =  statement.executeQuery(sqlquery);
            while (resultSet.next())
            {
                listSubject.add(resultSet.getString(1));
            }
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseFileButton = new javax.swing.JButton();
        confirmButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chooseFileButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chooseFileButton.setText("Chọn tệp");
        chooseFileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseFileButtonMouseClicked(evt);
            }
        });

        confirmButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confirmButton.setText("Thêm");
        confirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(chooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmButton)
                .addGap(165, 165, 165))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(chooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(confirmButton)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseFileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseFileButtonMouseClicked
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Excel","xls"));
        int retval = fileChooser.showOpenDialog(null);
        if(retval == JFileChooser.APPROVE_OPTION)
        {
            File imgFile = fileChooser.getSelectedFile();
            pathToFile = imgFile.getAbsolutePath().replace("\\", "\\\\");
        }
    }//GEN-LAST:event_chooseFileButtonMouseClicked

    private void confirmButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseClicked
        Workbook workbook;
        try {
            // create workbook to open file
            workbook = Workbook.getWorkbook(new File("E:\\demo.xls"));
            // get sheet want read
            Sheet sheet = workbook.getSheet(0);
            // get number row and col contain data
            int rows = sheet.getRows();
            int cols = sheet.getColumns();
 
//            System.out.println("Data in file:");
            // read data in each cell
            
            for (int row = 0; row < rows; row++) 
            {
                String insertSql = "INSERT INTO dbo.wordData VALUES(N'";
                for (int col = 0; col < cols - 1; col++) 
                {
                    Cell cell = sheet.getCell(col, row);
                    insertSql += cell.getContents() + "',N'";
//                    System.out.print(cell.getContents() + "\t");
                }
                Cell cell = sheet.getCell(cols - 1, row);
                if(!listSubject.contains(cell.getContents()))
                {
                    String insertSubjectSql = "INSERT INTO dbo.Subject VALUES(N'" + cell.getContents() + "')";
                    try
                    {
                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver"); 
                        connection = DriverManager.getConnection(connectionUrl);  
                        statement = connection.createStatement();
                        prepsInsertProduct = connection.prepareStatement(  
                        insertSubjectSql,  
                        Statement.RETURN_GENERATED_KEYS);  
                        prepsInsertProduct.execute();  
               
                    }
                    catch(Exception ex)
                    {
                        ex.printStackTrace();
                    }    
                }
                DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                Date date = new Date();
                insertSql += cell.getContents() + "',0,N'" + dateFormat.format(date) + "',0,N'')";
                try
                {
//                    System.out.print(insertSql);
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver"); 
                    connection = DriverManager.getConnection(connectionUrl);  
                    statement = connection.createStatement();
                    prepsInsertProduct = connection.prepareStatement(  
                    insertSql,  
                    Statement.RETURN_GENERATED_KEYS);  
                    prepsInsertProduct.execute();  
               
                }
                catch(Exception ex)
                {
                    ex.printStackTrace();
                }    
            }
            // close
            workbook.close();
        } 
        catch (BiffException e) 
        {
            System.out.println("File not found\n" + e.toString());
        }
        catch (IOException e) 
        {
            System.out.println("File not found\n" + e.toString());
        }
    }//GEN-LAST:event_confirmButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddWordByExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddWordByExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddWordByExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddWordByExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddWordByExcel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JButton confirmButton;
    // End of variables declaration//GEN-END:variables
}
